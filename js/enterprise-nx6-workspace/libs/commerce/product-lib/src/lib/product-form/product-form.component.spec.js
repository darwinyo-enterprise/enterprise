"use strict";var __extends=this&&this.__extends||function(){var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)t.hasOwnProperty(o)&&(e[o]=t[o])};return function(e,t){function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}();Object.defineProperty(exports,"__esModule",{value:!0});var product_form_component_1=require("./product-form.component"),testing_1=require("@enterprise/core/testing"),testing_2=require("@angular/core/testing"),store_1=require("@ngxs/store"),catalog_lib_1=require("@enterprise/commerce/catalog-lib"),manufacturer_lib_1=require("@enterprise/commerce/manufacturer-lib"),of_1=require("rxjs/observable/of"),category_lib_1=require("@enterprise/commerce/category-lib"),http_1=require("@angular/common/http"),forms_1=require("@angular/forms"),core_1=require("@angular/core"),file_upload_1=require("@enterprise/material/file-upload"),product_service_mock_1=require("../mocks/product-service.mock"),product_actions_1=require("../shared/product.actions"),product_state_1=require("../shared/product.state"),ProductFormPage=function(o){function e(e){var t=o.call(this,e)||this;return t.fixture=e,t}return __extends(e,o),Object.defineProperty(e.prototype,"saveBtn",{get:function(){return this.query("#save-button")},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"nameInputGroup",{get:function(){return this.query("#name-txtbox")},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"nameInputControl",{get:function(){return this.nameInputGroup.children.item(0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"priceInputGroup",{get:function(){return this.query("#price-txtbox")},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"priceInputControl",{get:function(){return this.priceInputGroup.children.item(0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"categoryInputGroup",{get:function(){return this.query("#category-select")},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"categoryInputControl",{get:function(){return this.categoryInputGroup.children.item(0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"manufacturerInputGroup",{get:function(){return this.query("#manufacturer-select")},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"manufacturerInputControl",{get:function(){return this.manufacturerInputGroup.children.item(0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"chipColorInputControl",{get:function(){return this.query("td-chips")},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"descriptionInputControl",{get:function(){return this.query("#description")},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"title",{get:function(){return this.query(".form-card__title")},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"stockInputGroup",{get:function(){return this.query("#stock-txtbox")},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"stockInputControl",{get:function(){return this.stockInputGroup.children.item(0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"discountInputGroup",{get:function(){return this.query("#discount-txtbox")},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"discountInputControl",{get:function(){return this.discountInputGroup.children.item(0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"locationInputGroup",{get:function(){return this.query("#location-txtbox")},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"locationInputControl",{get:function(){return this.locationInputGroup.children.item(0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"minPurchaseInputGroup",{get:function(){return this.query("#min-purchase-txtbox")},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"minPurchaseInputControl",{get:function(){return this.minPurchaseInputGroup.children.item(0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"hasExpiryInputControl",{get:function(){return this.query("#has-expire-checkbox")},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"ExpireDateInputGroup",{get:function(){return this.query("#expire-date-calender")},enumerable:!0,configurable:!0}),e}(testing_1.BaseTestPage);exports.ProductFormPage=ProductFormPage,describe("ProductFormComponent",function(){var o,e,t,r,n,c="Test Product";beforeEach(testing_2.async(function(){testing_2.TestBed.configureTestingModule({providers:[catalog_lib_1.ProductService,{provide:catalog_lib_1.ManufacturerService,useValue:{apiV1ManufacturerGet:function(){return of_1.of(manufacturer_lib_1.ManufacturersMock)}}},{provide:catalog_lib_1.CategoryService,useValue:{apiV1CategoryGet:function(){return of_1.of(category_lib_1.CategoriesMock)}}}],imports:[http_1.HttpClientModule,forms_1.ReactiveFormsModule,store_1.NgxsModule.forRoot([file_upload_1.FileUploadState,product_state_1.ProductState,manufacturer_lib_1.ManufacturerState,category_lib_1.CategoryState])],declarations:[product_form_component_1.ProductFormComponent],schemas:[core_1.NO_ERRORS_SCHEMA]}).compileComponents()})),beforeEach(function(){e=testing_2.TestBed.createComponent(product_form_component_1.ProductFormComponent),(o=e.componentInstance).nameSaveButton="Add",o.title=c,t=new ProductFormPage(e),n=testing_2.TestBed.get(catalog_lib_1.ProductService),spyOn(n,"apiV1ProductByIdGet").and.callFake(function(t){return of_1.of(product_service_mock_1.ProductViewModelsMock.filter(function(e){return e.id===t.toString()})[0])}),(r=testing_2.TestBed.get(store_1.Store)).dispatch(new product_actions_1.FetchSingleProduct(product_service_mock_1.ProductViewModelsMock[0].id)),spyOn(r,"dispatch").and.callThrough(),e.detectChanges()}),describe("Functionality Tests",function(){it("should populate value to image url in form when file upload changed",function(){var e=file_upload_1.FileUploadMocks;expect(o.imagesFormArray.length).toBe(0),r.dispatch(new file_upload_1.AddFileImage(e)),expect(o.imagesFormArray.length).toBe(e.length);var t=o.imagesFormArray.value;expect(t[0].imageName).toContain(e[0].fileName),expect(t[0].imageUrl).toContain(e[0].fileUrl)}),it("should remove image url in form value when image deleted",function(){expect(o.imagesFormArray.length).toBe(0);var e=file_upload_1.FileUploadMocks;r.dispatch(new file_upload_1.AddFileImage(e)),expect(o.imagesFormArray.length).toBe(e.length),expect(o.imagesFormArray.value[0].imageName).toContain(e[0].fileName),expect(o.imagesFormArray.value[0].imageUrl).toContain(e[0].fileUrl),r.dispatch(new file_upload_1.DeleteFileImage(e[0].fileName)),expect(o.imagesFormArray.length).toBe(e.length-1),expect(o.imagesFormArray.value[0].imageName).not.toContain(e[0].fileName)}),it("should dispatch fetch categories and manufacturers for select controls on init",function(){o.ngOnInit(),expect(r.dispatch).toHaveBeenCalledWith([category_lib_1.FetchCategories,manufacturer_lib_1.FetchManufacturers])}),it("should populate product Form correctly when product selected has value",function(){o.ngOnInit(),o.ngOnChanges();var e=o.productForm.value,t=product_service_mock_1.ProductViewModelsMock[0];expect(e.name).toBe(t.name),expect(e.productColors.length).toBe(t.productColors.length),expect(e.productImages.length).toBe(t.productImages.length),expect(e.price).toBe(t.price),expect(e.description).toBe(t.description),expect(e.actorId).toBe(t.actorId),expect(e.manufacturerId).toBe(t.manufacturerId),expect(e.manufacturerName).toBe(t.manufacturerName),expect(e.categoryId).toBe(t.categoryId),expect(e.categoryName).toBe(t.categoryName)}),it("should populate File image state when product selected defined",function(){o.productViewModel$.subscribe(function(e){expect(e.productImages.length).toBe(product_service_mock_1.ProductViewModelsMock[0].productImages.length),expect(e.productImages[0].imageName).toBe(product_service_mock_1.ProductViewModelsMock[0].productImages[0].imageName),expect(e.productImages[0].imageUrl).toBe(product_service_mock_1.ProductViewModelsMock[0].productImages[0].imageUrl)}),o.ngOnInit()}),it("should dispatch file upload mode to multiple",function(){expect(r.dispatch).toHaveBeenCalledWith(new file_upload_1.SetModeFileUpload(!0))}),it("should emit save event when save btn clicked",function(){o.save.subscribe(function(e){return expect(!0).toBeTruthy()}),t.saveBtn.click()}),it("should change has expire value on form and field when onHasExpireCheckboxChanged",function(){o.ngOnChanges(),expect(o.hasExpiry).toBeTruthy(),expect(o.productForm.value.hasExpiry).toBe(o.hasExpiry+""),o.onHasExpiryCheckbox(),expect(o.hasExpiry).toBeFalsy(),expect(o.productForm.value.hasExpiry).toBe(o.hasExpiry+"")}),it("should emit save event with correct product form value when save btn clicked",function(){o.save.subscribe(function(e){return expect(e).toBeTruthy(o.productForm.value)}),t.saveBtn.click()})}),describe("UI Tests",function(){it("should render correct Title",function(){expect(t.title.innerText).toContain(c)}),it("should render correct save button name",function(){expect(t.saveBtn.innerText).toContain("Add")}),it("should disabled save button when form pristine",function(){expect(t.saveBtn.hasAttribute("disabled")).toBeTruthy()}),it("should disabled save button when form invalid",function(){expect(t.saveBtn.hasAttribute("disabled")).toBeTruthy(),o.productForm.markAsTouched(),o.productForm.markAsDirty(),e.detectChanges(),expect(t.saveBtn.hasAttribute("disabled")).toBeTruthy()}),it("should render validation error message when input error",function(){o.productForm.patchValue({name:"Test"}),o.nameControl.markAsDirty(),o.nameControl.markAsTouched(),e.detectChanges(),expect(t.nameInputGroup.children.length).toEqual(1),o.productForm.patchValue({name:""}),e.detectChanges(),expect(t.nameInputGroup.children.length).toEqual(2),expect(t.nameInputGroup.children.item(1)).toBeDefined()}),it("should not render validation error message when input is pristine",function(){expect(o.nameControl.pristine).toBeTruthy(),expect(o.nameControl.invalid).toBeTruthy(),e.detectChanges(),expect(t.nameInputGroup.children.length).toEqual(1),expect(t.nameInputGroup.children.item(1)).toBeNull()}),it("should render validation error message when stock text box is error",function(){o.productForm.patchValue({stock:1}),o.stockControl.markAsDirty(),o.stockControl.markAsTouched(),e.detectChanges(),expect(t.stockInputGroup.children.length).toEqual(1),o.productForm.patchValue({stock:null}),e.detectChanges(),expect(t.stockInputGroup.children.length).toEqual(2),expect(t.stockInputGroup.children.item(1)).toBeDefined()}),it("should not render validation error message when stock input is pristine",function(){o.productForm.patchValue({stock:null}),expect(o.stockControl.pristine).toBeTruthy(),expect(o.stockControl.invalid).toBeTruthy(),e.detectChanges(),expect(t.stockInputGroup.children.length).toEqual(1),expect(t.stockInputGroup.children.item(1)).toBeNull()}),it("should render validation error message when discount text box is error",function(){o.productForm.patchValue({discount:1}),o.discountControl.markAsDirty(),o.discountControl.markAsTouched(),e.detectChanges(),expect(t.discountInputGroup.children.length).toEqual(1),o.productForm.patchValue({discount:null}),e.detectChanges(),expect(t.discountInputGroup.children.length).toEqual(2),expect(t.discountInputGroup.children.item(1)).toBeDefined()}),it("should not render validation error message when discount input is pristine",function(){o.productForm.patchValue({discount:null}),expect(o.discountControl.pristine).toBeTruthy(),expect(o.discountControl.invalid).toBeTruthy(),e.detectChanges(),expect(t.discountInputGroup.children.length).toEqual(1),expect(t.discountInputGroup.children.item(1)).toBeNull()}),it("should render validation error message when location text box is error",function(){o.productForm.patchValue({location:"New York"}),o.locationControl.markAsDirty(),o.locationControl.markAsTouched(),e.detectChanges(),expect(t.locationInputGroup.children.length).toEqual(1),o.productForm.patchValue({location:null}),e.detectChanges(),expect(t.locationInputGroup.children.length).toEqual(2),expect(t.locationInputGroup.children.item(1)).toBeDefined()}),it("should not render validation error message when location input is pristine",function(){o.productForm.patchValue({location:null}),expect(o.locationControl.pristine).toBeTruthy(),expect(o.locationControl.invalid).toBeTruthy(),e.detectChanges(),expect(t.locationInputGroup.children.length).toEqual(1),expect(t.locationInputGroup.children.item(1)).toBeNull()}),it("should render validation error message when min purchase text box is error",function(){o.productForm.patchValue({minPurchase:1}),o.minPurchaseControl.markAsDirty(),o.minPurchaseControl.markAsTouched(),e.detectChanges(),expect(t.minPurchaseInputGroup.children.length).toEqual(1),o.productForm.patchValue({minPurchase:null}),e.detectChanges(),expect(t.minPurchaseInputGroup.children.length).toEqual(2),expect(t.minPurchaseInputGroup.children.item(1)).toBeDefined()}),it("should not render validation error message when min purchase input is pristine",function(){o.productForm.patchValue({minPurchase:null}),expect(o.minPurchaseControl.pristine).toBeTruthy(),expect(o.minPurchaseControl.invalid).toBeTruthy(),e.detectChanges(),expect(t.minPurchaseInputGroup.children.length).toEqual(1),expect(t.minPurchaseInputGroup.children.item(1)).toBeNull()}),it("should enabled save button when form valid",function(){expect(t.saveBtn.hasAttribute("disabled")).toBeTruthy(),o.productForm.patchValue({name:"Test",categoryId:"1",manufacturerId:"1",price:200,stock:1,discount:10,location:"New York",minPurchase:1}),e.detectChanges(),expect(t.saveBtn.hasAttribute("disabled")).toBeFalsy()}),it("should render validation error message when price control is null",function(){t.priceInputControl.value="",o.nameControl.markAsDirty(),o.nameControl.markAsTouched(),e.detectChanges(),expect(t.nameInputGroup.children.length).toEqual(2),expect(t.nameInputGroup.children.item(1)).toBeDefined()}),it("should show hide expire date control when checkbox changed",function(){o.hasExpiry=!0,e.detectChanges(),expect(t.ExpireDateInputGroup).toBeDefined(),o.hasExpiry=!1,e.detectChanges(),expect(t.ExpireDateInputGroup).toBeNull()})}),describe("State Tests",function(){it("should populate value in input when selected product state exists",function(){r.dispatch(new product_actions_1.FetchSingleProduct(product_service_mock_1.ProductViewModelsMock[0].id.toString())),o.ngOnChanges(),e.detectChanges(),expect(o.productForm.value).toEqual(product_service_mock_1.ProductViewModelsMock[0])})})});