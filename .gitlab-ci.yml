image: docker:latest

services:
  - docker:dind

# Use the OverlayFS driver for improved performance.
variables:
  DOCKER_DRIVER: overlay

before_script:
 # - apk add --update python py-pip python-dev && pip install docker-compose # install docker-compose
 - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

# commerce_library_unit_test:
#   stage: test
#   image: microsoft/aspnetcore-build:2.0
#   cache:
#     untracked: true
#     paths:
#       - bin/
#   script:
#     - cd ./net/tests/Enterprise.Library.EventBus.Tests
#     - dotnet restore ./Enterprise.Library.EventBus.Tests.csproj
#     - dotnet build ./Enterprise.Library.EventBus.Tests.csproj
#     - dotnet test ./Enterprise.Library.EventBus.Tests.csproj

# commerce_catalog_unit_test:
#   stage: test
#   image: microsoft/aspnetcore-build:2.0
#   cache:
#     untracked: true
#     paths:
#     - bin/
#   script:
#     - cd ./tests/Enterprise.Commerce.Tests
#     - dotnet restore ./Enterprise.Commerce.Tests.csproj
#     - dotnet build ./Enterprise.Commerce.Tests.csproj
#     - dotnet test ./Enterprise.Commerce.Tests.csproj

commerce_catalog_integration_test:
  stage: test
  image: "$CI_REGISTRY_IMAGE/aspnetcore-ci:v1"
  cache:
    untracked: true
    paths:
      - bin/
  script:
    - cd ./net
    - docker-compose -f docker-compose-ci.yml -f docker-compose-ci.override.yml up --abort-on-container-exit
    

# commerce_build_ci_images:
#   stage: build
#   script:
#     - cd ./images/aspnetcore-build-ci
#     - docker build -t "$CI_REGISTRY_IMAGE/aspnetcore-ci:v1" .
#     - docker push "$CI_REGISTRY_IMAGE/aspnetcore-ci:v1"