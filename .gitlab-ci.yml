image: "$CI_REGISTRY_IMAGE/aspnetcore-ci:v1"

services:
  - docker:dind

before_script:
  # - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  - ls
  - bash
# ci_docker_image_build:
#   stage: build
#   script:
#     - docker build ./images/aspnetcore-build-ci/. -t "$CI_REGISTRY_IMAGE/aspnetcore-ci:v1"
#     - docker push "$CI_REGISTRY_IMAGE/aspnetcore-ci:v1"

# commerce_library_unit_test:
#   stage: test
#   # image: microsoft/aspnetcore-build:2.0
#   cache:
#     untracked: true
#     paths:
#     - bin/
#   script:
#     - cd ./net/tests/Enterprise.Library.EventBus.Tests
#     - dotnet restore ./Enterprise.Library.EventBus.Tests.csproj
#     - dotnet build ./Enterprise.Library.EventBus.Tests.csproj
#     - dotnet test ./Enterprise.Library.EventBus.Tests.csproj

commerce_catalog_unit_test:
  stage: test
  # image: 
  cache:
    untracked: true
    paths:
    - bin/
  script:
    # - docker-compose -f ./net/docker-compose-external.yml -f ./net/docker-compose-external.override.yml up
    # - cd ./net/tests/Enterprise.Commerce.Tests
    
    # - dotnet restore ./Enterprise.Commerce.Tests.csproj
    # - dotnet build ./Enterprise.Commerce.Tests.csproj
    # - dotnet test ./Enterprise.Commerce.Tests.csproj
    - docker ps
    - docker-compose
    - dotnet

# commerce_catalog_integration_test:
#   stage: test
#   image: microsoft/aspnetcore-build:2.0
#   cache:
#     untracked: true
#     paths:
#     - bin/
#   script:
#     - cd ./net/integration-tests/Enterprise.Commerce.IntegrationTests
#     - docker-compose -f docker-compose-external.yml -f docker-compose-external.override.yml up
#     - dotnet restore ./Enterprise.Commerce.IntegrationTests.csproj
#     - dotnet build ./Enterprise.Commerce.IntegrationTests.csproj
#     - dotnet test ./Enterprise.Commerce.IntegrationTests.csproj
